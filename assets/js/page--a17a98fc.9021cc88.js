(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{486:function(e,t,n){"use strict";n.r(t);var a=n(2),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("Tuesday 03/23/2021\nAfternoon Link: https://github.com/Toppedyk/js-tests-loops-and-arrays")]),e._v(" "),n("p",[e._v("What are the three ways to syntactically write a function? What are the differences in how the function acts (if any)?\nfunction name(parameters) {\n// statements\n}")]),e._v(" "),n("p",[e._v("let name = function(parameters) {\n// statements\n}")]),e._v(" "),n("p",[e._v("let name = (parameters) => {\n// statements\n}")]),e._v(" "),n("p",[e._v("the syntax is the main difference between these and they will act the same. named functions(middle example) are not hoisted. arrow functions(last example) do not create a this variable.")]),e._v(" "),n("p",[e._v("What is the difference between Parameters and Arguments?\nparameters are inside the parenthasees when the function is declared. Arguments are passed in when the function is called.")]),e._v(" "),n("p",[e._v("What are higher order functions? Can you provide an example?\na higher order function is when it takes another function as a parameter or returns a function.\narray.map & array.filter are both examples.")])])}),[],!1,null,null,null);t.default=r.exports}}]);